{
	// Place your design-patterns workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Singleton": {
		"scope": "typescript",
		"prefix": "singleton",
		"body": [
			"export class ${1:SingletonClass} {",
			"    private static _instance: ${1:SingletonClass} = new ${1:SingletonClass}();",
			"",
			"    constructor() {",
			"        if (${1:SingletonClass}._instance) {",
			"            throw new Error('Singleton class. Cannot instantiate using new');",
			"        }",
			"        ${1:SingletonClass}._instance = this;",
			"    }",
			"",
			"    public static get instance(): ${1:SingletonClass} {",
			"        return ${1:SingletonClass}._instance;",
			"    }",
			"}",
		],
		"description": "Typescript Singleton Class"
	}
}